diff --git a/StringPiece.h b/StringPiece.h
index 921877d..e87d3ee 100644
--- a/StringPiece.h
+++ b/StringPiece.h
@@ -76,6 +76,12 @@ class BasicStringPiece {
   bool operator==(const BasicStringPiece<TChar>& rhs) const;
   bool operator!=(const BasicStringPiece<TChar>& rhs) const;
 
+  // for std::basic_string
+  bool operator<(const std::basic_string<TChar>& rhs) const;
+  bool operator>(const std::basic_string<TChar>& rhs) const;
+  bool operator==(const std::basic_string<TChar>& rhs) const;
+  bool operator!=(const std::basic_string<TChar>& rhs) const;
+
   const_iterator begin() const;
   const_iterator end() const;
 
@@ -256,6 +262,26 @@ inline bool BasicStringPiece<TChar>::operator!=(const BasicStringPiece<TChar>& r
   return compare(rhs) != 0;
 }
 
+template <typename TChar>
+inline bool BasicStringPiece<TChar>::operator<(const std::basic_string<TChar>& rhs) const {
+    return compare(BasicStringPiece(rhs)) < 0;
+}
+
+template <typename TChar>
+inline bool BasicStringPiece<TChar>::operator>(const std::basic_string<TChar>& rhs) const {
+    return compare(BasicStringPiece(rhs)) > 0;
+}
+
+template <typename TChar>
+inline bool BasicStringPiece<TChar>::operator==(const std::basic_string<TChar>& rhs) const {
+    return compare(BasicStringPiece(rhs)) == 0;
+}
+
+template <typename TChar>
+inline bool BasicStringPiece<TChar>::operator!=(const std::basic_string<TChar>& rhs) const{
+    return compare(BasicStringPiece(rhs)) != 0;
+}
+
 template <typename TChar>
 inline typename BasicStringPiece<TChar>::const_iterator BasicStringPiece<TChar>::begin() const {
   return data_;
